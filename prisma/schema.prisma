generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  name       String
  email      String    @unique
  password   String
  biografia  String?
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
}

model Campanhas {
  id          String       @id @default(uuid())
  titulo      String
  descricao   String
  created_at  DateTime?    @default(now())
  updated_at  DateTime?    @default(now())
  imagem      Imagem[]
  personagens Personagem[]
}

model Personagem {
  id           String       @id @default(uuid())
  nome         String
  descricao    String
  classe       String
  nivel        Int
  raca         String
  pontosDeVida Int
  campanhasId  String?
  atributos    Atributo[]
  imagem       Imagem[]
  inventarios  Inventario[]
  Campanhas    Campanhas?   @relation(fields: [campanhasId], references: [id])
}

model Inventario {
  id           String     @id @default(uuid())
  nomeDoItem   String
  tipoDoItem   String
  descricao    String?
  quantidade   Int
  personagemId String
  personagem   Personagem @relation(fields: [personagemId], references: [id])
}

model Atributo {
  id           String     @id @default(uuid())
  forca        Int
  destreza     Int
  constituicao Int
  inteligencia Int
  sabedoria    Int
  carisma      Int
  personagemId String
  personagem   Personagem @relation(fields: [personagemId], references: [id])
}

model Imagem {
  id           String      @id @default(uuid())
  url          String
  personagemId String?
  campanhasId  String?
  created_at   DateTime?   @default(now())
  updated_at   DateTime?   @default(now())
  campanha     Campanhas?  @relation(fields: [campanhasId], references: [id])
  personagem   Personagem? @relation(fields: [personagemId], references: [id])
}
